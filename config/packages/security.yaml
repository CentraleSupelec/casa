security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\Student:
            algorithm: auto
        App\Entity\Administrator:
            algorithm: auto
        App\Entity\LessorAdminUser:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        student:
            entity:
                class: App\Entity\Student
                property: email
        admin:
            entity:
                class: App\Entity\Administrator
                property: email
        lessor_admin:
            entity:
                class: App\Entity\LessorAdminUser
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        lessor_admin:
            pattern: /lessor/admin(.*)
            context: main
            provider: lessor_admin
            user_checker: App\Security\UserChecker
            form_login:
                provider: lessor_admin
                login_path: lessor_admin_login
                check_path: lessor_admin_login_check
                default_target_path: /lessor/admin
                enable_csrf: true
            logout:
                path: lessor_admin_logout
                target: lessor_admin_login
                invalidate_session: true
        admin:
            pattern: /admin(.*)
            context: main
            provider: admin
            user_checker: App\Security\UserChecker
            form_login:
                provider: admin
                login_path: admin_login
                check_path: admin_login_check
                default_target_path: /admin
                enable_csrf: true
            logout:
                path: admin_logout
                target: admin_login
                invalidate_session: true

        app:
            pattern: ^/
            context: main
            provider: student
            user_checker: App\Security\UserChecker
            form_login:
                login_path: app_login
                check_path: app_login_check
                default_target_path: app_student_profile
                enable_csrf: true
            logout:
                path: app_logout

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # App
        - path: ^/(fr|en)/student
          roles: ROLE_STUDENT
        - path: ^/(fr|en)/housing-request
          roles: ROLE_STUDENT
        - path: ^/(.+)/(add|remove)-bookmark
          roles: ROLE_STUDENT
        - path: ^/(.+)/(add|remove)-bookmark
          roles: ROLE_STUDENT
        # Lessor Admin
        - path: ^/lessor/admin/login
          roles: PUBLIC_ACCESS
        - path: ^/lessor/admin/reset(.*)
          roles: PUBLIC_ACCESS
        - path: ^/lessor/admin(.*)
          roles: ROLE_LESSOR_ADMIN
        # Admin
        - path: ^/admin/login
          roles: PUBLIC_ACCESS
        - path: ^/admin(.*)
          roles: ROLE_ADMIN

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
